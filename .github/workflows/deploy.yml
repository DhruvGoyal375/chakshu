name: Build, Push Docker Images & Deploy with HTTPS on Azure Container Apps

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker & Docker-Compose
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        docker --version
        docker compose version

    - name: Create .env file
      run: |
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env

    - name: Build Docker Images
      run: |
        docker compose build

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Tag and Push Docker Images
      run: |
        USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
        
        # Tag images
        docker tag chakshu-chakshu:latest $USERNAME/chakshu-chakshu:latest
        docker tag chakshu-node:latest $USERNAME/chakshu-node:latest

        # Push images to Docker Hub
        docker push $USERNAME/chakshu-chakshu:latest
        docker push $USERNAME/chakshu-node:latest

    - name: Azure Login
      run: |
        az login --service-principal \
          --username "${{ secrets.AZURE_CLIENT_ID }}" \
          --password "${{ secrets.AZURE_CLIENT_SECRET }}" \
          --tenant "${{ secrets.AZURE_TENANT_ID }}"

    - name: Deploy to Azure Container Apps with Docker Hub Auth
      run: |
        RESOURCE_GROUP="${{ secrets.AZURE_RESOURCE_GROUP }}"
        ACA_ENV="chakshu-env"
        APP_NAME="chakshu-app"

        # Check if the ACA environment exists
        ENV_EXISTS=$(az containerapp env show --name "$ACA_ENV" --resource-group "$RESOURCE_GROUP" --query "name" --output tsv || echo "")

        if [ -z "$ENV_EXISTS" ]; then
          echo "Creating Azure Container App Environment..."
          az containerapp env create \
            --name "$ACA_ENV" \
            --resource-group "$RESOURCE_GROUP" \
            --location "eastus" # Change to your preferred region
        else
          echo "Using existing ACA environment: $ACA_ENV"
        fi

        # Check if the app already exists
        APP_EXISTS=$(az containerapp show --name "$APP_NAME" --resource-group "$RESOURCE_GROUP" --query "name" --output tsv || echo "")

        if [ -n "$APP_EXISTS" ]; then
          echo "App exists. Updating..."
          az containerapp update \
            --name "$APP_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --image "${{ secrets.DOCKERHUB_USERNAME }}/chakshu-chakshu:latest" \
            --cpu 4 --memory 16Gi \
            --registry-server "index.docker.io" \
            --registry-username "${{ secrets.DOCKERHUB_USERNAME }}" \
            --registry-password "${{ secrets.DOCKERHUB_PASSWORD }}" \
            --environment-variables \
              DB_NAME="${{ secrets.DB_NAME }}" \
              DB_USER="${{ secrets.DB_USER }}" \
              DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              DB_HOST="${{ secrets.DB_HOST }}" \
              DB_PORT="${{ secrets.DB_PORT }}" \
              DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
            --ingress external --target-port 8000
        else
          echo "Creating new Container App..."
          az containerapp create \
            --name "$APP_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --environment "$ACA_ENV" \
            --image "${{ secrets.DOCKERHUB_USERNAME }}/chakshu-chakshu:latest" \
            --cpu 4 --memory 16Gi \
            --registry-server "index.docker.io" \
            --registry-username "${{ secrets.DOCKERHUB_USERNAME }}" \
            --registry-password "${{ secrets.DOCKERHUB_PASSWORD }}" \
            --environment-variables \
              DB_NAME="${{ secrets.DB_NAME }}" \
              DB_USER="${{ secrets.DB_USER }}" \
              DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              DB_HOST="${{ secrets.DB_HOST }}" \
              DB_PORT="${{ secrets.DB_PORT }}" \
              DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
            --ingress external --target-port 8000
        fi

        # Get ACA URL
        ACA_URL=$(az containerapp show --name "$APP_NAME" --resource-group "$RESOURCE_GROUP" --query "properties.configuration.ingress.fqdn" --output tsv)
        echo "Deployed to: https://$ACA_URL"

    - name: Cleanup Docker Cache
      run: |
        docker system prune -af
