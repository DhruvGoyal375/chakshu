{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Chakshu Backend Documentation","text":"<p>Welcome to the developer documentation for Chakshu, a backend service that supports a Wikipedia-based screen reader designed for blind and partially sighted users.</p> <p>This documentation is intended to help contributors and new developers understand, set up, and extend the Chakshu backend.</p>"},{"location":"#what-is-chakshu","title":"What is Chakshu?","text":"<p>Chakshu is a Django-based backend application that powers a screen-reading tool using Wikipedia as a content source. It offers features like: - Intelligent page selection - Option-based content extraction (summary, full content, image captions, references) - Image captioning support - Modular architecture with scraping and processing logic</p>"},{"location":"#tech-stack","title":"Tech Stack","text":"<ul> <li>Language: Python 3.13</li> <li>Framework: Django 5.x</li> <li>Database: SQLite (dev), Redis (optional, for caching)</li> <li>Caching: LocMem (dev), Redis (prod)</li> <li>Frontend: Separate project (not covered here)</li> <li>Containerization: Docker (optional)</li> </ul>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-is-wikipedia-content-fetched","title":"How is Wikipedia content fetched?","text":"<p>Through both Google Search (limited to <code>site:en.wikipedia.org</code>) and the MediaWiki API, with scraping as fallback.</p>"},{"location":"faq/#can-i-replace-the-search-backend","title":"Can I replace the search backend?","text":"<p>Yes. Replace the <code>googlesearch</code> logic with Bing or an internal search index.</p>"},{"location":"faq/#is-the-image-captioning-module-required","title":"Is the image captioning module required?","text":"<p>Not for basic summary usage. It is only triggered with option <code>4</code> in <code>/process/</code>.</p>"},{"location":"structure/","title":"Project Structure","text":"<pre><code>chakshu/\n\u251c\u2500\u2500 api/              # Main API router\n\u251c\u2500\u2500 captioner/        # Image captioning module\n\u251c\u2500\u2500 core/             # Wikipedia search &amp; content processing logic\n\u251c\u2500\u2500 scraper/          # HTML scraping and data extraction logic\n\u251c\u2500\u2500 chakshu/          # Django project config\n\u251c\u2500\u2500 manage.py         # Django CLI runner\n\u251c\u2500\u2500 Dockerfile        # Optional: Docker container definition\n</code></pre>"},{"location":"structure/#key-files","title":"Key Files","text":"<ul> <li><code>chakshu/settings.py</code>: Django settings file  </li> <li><code>chakshu/urls.py</code>: Root URL router  </li> <li><code>api/urls.py</code>: Includes <code>core</code> and <code>scraper</code> APIs  </li> </ul>"},{"location":"api/endpoints/","title":"API Endpoints","text":""},{"location":"api/endpoints/#apisearch","title":"<code>/api/search/</code>","text":"<ul> <li>Method: <code>GET</code> </li> <li>Query param: <code>q=your+query</code> </li> <li>Function:   Performs a Google search restricted to Wikipedia.   Returns top 5 links with short descriptions parsed in parallel.</li> </ul>"},{"location":"api/endpoints/#apiselect","title":"<code>/api/select/</code>","text":"<ul> <li>Method: <code>GET</code> </li> <li>Query param: <code>link=selected_wiki_url</code> </li> <li> <p>Function:   Accepts a selected Wikipedia link and returns available processing options:</p> </li> <li> <p>Short description  </p> </li> <li>Summary  </li> <li>Full content  </li> <li>Image captions  </li> <li>References</li> </ul>"},{"location":"api/endpoints/#apiprocess","title":"<code>/api/process/</code>","text":"<ul> <li>Method: <code>GET</code> </li> <li>Query params: </li> <li><code>link=wiki_url</code> </li> <li> <p><code>option=1</code> to <code>5</code></p> </li> <li> <p>Function:   Depending on the selected option:</p> </li> <li> <p>Short description (from page HTML)  </p> </li> <li>Summary (via MediaWiki API)  </li> <li>Full content (via HTML scraping)  </li> <li>All image captions on the page  </li> <li>Citations/references from the page</li> </ul>"},{"location":"api/scraper/","title":"Scraper Utilities","text":"<p>The <code>scraper</code> module uses a class <code>WikipediaScraper</code> that handles: - Fetching page HTML using requests - Cleaning tags - Extracting summary, citations, and image URLs</p>"},{"location":"api/scraper/#key-functions","title":"Key Functions","text":"<ul> <li><code>get_short_description(url)</code></li> <li><code>get_full_content(url)</code></li> <li><code>get_citations(url)</code></li> <li><code>get_image_urls(url)</code></li> </ul>"},{"location":"api/views/","title":"Core Views","text":""},{"location":"api/views/#searchresultsview","title":"SearchResultsView","text":"<p>Uses Google Search to find Wikipedia articles. Calls <code>get_short_description()</code> on results.</p>"},{"location":"api/views/#selectlinkview","title":"SelectLinkView","text":"<p>Provides options to the user after they choose a link.</p>"},{"location":"api/views/#processoptionview","title":"ProcessOptionView","text":"<p>Fetches content based on selected option: - 1: Short Description - 2: Summary using MediaWiki API - 3: Full scraped content - 4: Captions from image processing - 5: Reference scraping</p>"},{"location":"modules/captioner/","title":"Captioner Module","text":"<p>This module processes images scraped from Wikipedia and generates captions for them.</p>"},{"location":"modules/captioner/#main-class","title":"Main Class","text":"<ul> <li><code>image_captioner.py</code>: Handles image downloading and preprocessing</li> <li><code>metadata_image_captioner.py</code>: Generates context-aware image captions</li> </ul> <p>Currently uses local models. Can be extended for cloud-based captioning (e.g., Vertex AI).</p>"},{"location":"modules/core/","title":"Core Module","text":"<p>The <code>core</code> app acts as the entry point for user search interaction.</p>"},{"location":"modules/core/#views","title":"Views","text":"<ul> <li><code>SearchResultsView</code></li> <li><code>SelectLinkView</code></li> <li><code>ProcessOptionView</code></li> </ul>"},{"location":"modules/core/#helper-module","title":"Helper Module","text":"<ul> <li><code>wiki_api.py</code>: Wrapper for MediaWiki API to fetch summaries.</li> </ul>"}]}